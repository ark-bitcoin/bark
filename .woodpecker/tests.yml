when:
  - event: pull_request
  - event: manual
  - event: tag
  - evaluate: 'CI_PIPELINE_EVENT == "push" && CI_COMMIT_BRANCH == "master" && CI_REPO_URL == "https://codeberg.org/ark-bitcoin/bark"'

clone:
  - name: clone
    image: woodpeckerci/plugin-git@sha256:2aaacedd7da067f2f6b54a3ef3d39cc69cc0c1152e377fd8df266bd34acd317e
    settings:
      partial: false
      depth: 100
      lfs: false

steps:
  - name: check-commits
    image: registry.2nd.dev/build:21
    commands:
      - git log --oneline | head -n 1
      - just check-commits
      - git log --oneline | head -n 1

  - name: build
    depends_on: check-commits
    image: registry.2nd.dev/build:21
    volumes:
      - /data:/host/data
    commands:
      - git log --oneline | head -n 1
      - >
        nix develop .#default --command bash -c "
          cargo version &&
          cargo build --workspace &&
          cargo install --locked --path bark &&
          cargo install --locked --path server
        "

  - name: compare-static-files
    depends_on: check-commits
    image: registry.2nd.dev/build:21
    commands:
      - >
        nix develop .#default --command bash -c "
          chmod 777 -R .
          cargo run   --example dump-sqlite-schema  > bark/schema.sql
          cargo run   --example dump-default-config > server/config.default.toml
          cargo build --example dump-server-postgres-schema
          sudo -E -u postgres ./target/debug/examples/dump-server-postgres-schema > server/schema.sql
          sed -i '/^-- Dumped by .*$/d'   server/schema.sql
          sed -i '/^-- Dumped from .*$/d' server/schema.sql
          chmod 644 bark/schema.sql
          chmod 644 server/config.default.toml
          chmod 644 server/schema.sql
        "
      - bash contrib/check-clean-diff.sh bark/schema.sql
      - bash contrib/check-clean-diff.sh server/config.default.toml
      - bash contrib/check-clean-diff.sh server/schema.sql

  - name: test-unit
    depends_on: build
    image: registry.2nd.dev/build:21
    commands:
      - git log --oneline | head -n 1
      - >
        nix develop .#default --command bash -c "
          cargo test --workspace --exclude ark-testing
        "

  - name: use-bark-as-dependency
    depends_on: build
    image: registry.2nd.dev/build:21
    commands:
      - >
        nix develop .#default --command bash -c "
          cargo init barktest &&
          cd barktest &&
          cargo add bark-wallet &&
          cargo update &&
          cargo build
        "

  - name: bark-as-libs
    depends_on: build
    image: registry.2nd.dev/build:21
    commands:
      - >
        nix develop .#default --command bash -c "
          cargo build -p bark-wallet      --no-default-features --features=\"\" &&
          cargo build -p bark-bitcoin-ext --no-default-features --features=\"\" &&
          cargo build -p ark-lib          --no-default-features --features=\"\"
        "

  - name: test-integration-esplora
    when:
      - event: push
        branch: master
    depends_on: build
    image: registry.2nd.dev/build:21
    volumes:
      - /data:/host/data
    environment:
      CHAIN_SOURCE: esplora
      TEST_DIRECTORY: ./test/esplora
      TEST_POSTGRES_HOST: localhost
      RUST_TEST_THREADS: 4
    commands:
      - git log --oneline | head -n 1
      - export CAPTAIND_EXEC=${CI_WORKSPACE}/target/debug/captaind
      - export BARK_EXEC=${CI_WORKSPACE}/target/debug/bark
      - service postgresql start
      - bash ./contrib/ci-run-test.sh test-integration

  - name: test-integration-mempool
    depends_on: build
    image: registry.2nd.dev/build:21
    volumes:
      - /data:/host/data
    environment:
      CHAIN_SOURCE: mempool
      TEST_DIRECTORY: ./test/mempool
      TEST_POSTGRES_HOST: localhost
      RUST_TEST_THREADS: 4
    commands:
      - git log --oneline | head -n 1
      - export CAPTAIND_EXEC=${CI_WORKSPACE}/target/debug/captaind
      - export BARK_EXEC=${CI_WORKSPACE}/target/debug/bark
      - service postgresql start
      - bash ./contrib/ci-run-test.sh test-integration

  - name: test-integration-btc29.1
    depends_on: build
    image: registry.2nd.dev/build:21
    volumes:
      - /data:/host/data
    environment:
      TEST_DIRECTORY: ./test/btc29
      TEST_POSTGRES_HOST: localhost
      RUST_TEST_THREADS: 4
    commands:
      - git log --oneline | head -n 1
      - export CAPTAIND_EXEC=${CI_WORKSPACE}/target/debug/captaind
      - export BARK_EXEC=${CI_WORKSPACE}/target/debug/bark
      - service postgresql start
      - bash ./contrib/ci-run-test.sh test-integration

depends_on:
  - main
