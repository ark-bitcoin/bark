when:
  - event: tag

clone:
  - name: clone
    image: woodpeckerci/plugin-git@sha256:2aaacedd7da067f2f6b54a3ef3d39cc69cc0c1152e377fd8df266bd34acd317e
    settings:
      partial: false
      depth: 100
      lfs: false

steps:
  - name: parse-versions
    when:
      - event: tag
        ref: refs/tags/bark-*
    image: registry.2nd.dev/build:23
    commands:
      - sudo chown -R nixuser:nixbld /woodpecker
      - bash ./contrib/parse-versions.sh "${CI_COMMIT_TAG}" > VERSION
      - cat VERSION

  - name: build-bark
    when:
      - event: tag
        ref: refs/tags/bark-*
    depends_on: parse-versions
    image: registry.2nd.dev/build:23
    environment:
      SDKROOT: /usr/local/osxcross/SDK/MacOSX15.4.sdk
    commands:
      - cat VERSION
      - just release-bark
      - cp ./target/x86_64-unknown-linux-gnu/release/bark      bark-linux-x86_64
      - cp ./target/aarch64-unknown-linux-gnu/release/bark     bark-linux-aarch64
      - cp ./target/armv7-unknown-linux-gnueabihf/release/bark bark-linux-armv7
      - cp ./target/x86_64-pc-windows-gnu/release/bark.exe     bark-windows-x86_64.exe
      - cp ./target/x86_64-apple-darwin/release/bark           bark-apple-x86_64
      - cp ./target/aarch64-apple-darwin/release/bark          bark-apple-aarch64

  - name: build-and-push-bark-to-registry
    when:
      - event: tag
        ref: refs/tags/bark-*
    failure: ignore
    depends_on: build-bark
    # When this task fails make sure the sha256 is still available.
    #  You can verify using command: `skopeo inspect docker://quay.io/buildah/stable`
    #  or `skopeo inspect docker://quay.io/buildah/stable@sha256:5f67b6ece887c7ffbc063d174fd95f057a76b218adf1160c7a5c3d63997efd4b`
    image: quay.io/buildah/stable@sha256:5f67b6ece887c7ffbc063d174fd95f057a76b218adf1160c7a5c3d63997efd4b
    environment:
      REGISTRY_LOGIN_TOKEN:
        from_secret: REGISTRY_LOGIN_TOKEN
    pull: true
    privileged: true
    commands:
      - cat VERSION
      - echo $REGISTRY_LOGIN_TOKEN | buildah login -u registry --password-stdin registry.2nd.dev
      # Build the containers
      - buildah build -f ./.woodpecker/images/releases/bark/linux_amd64.Dockerfile --tag registry.2nd.dev/bark:linux-amd64 .
      - buildah build -f ./.woodpecker/images/releases/bark/linux_arm64.Dockerfile --tag registry.2nd.dev/bark:linux-arm64 .
      - buildah build -f ./.woodpecker/images/releases/bark/linux_armv7.Dockerfile --tag registry.2nd.dev/bark:linux-armv7 .
      # Push containers to registry.2nd.dev
      - buildah push registry.2nd.dev/bark:linux-amd64
      - buildah push registry.2nd.dev/bark:linux-arm64
      - buildah push registry.2nd.dev/bark:linux-armv7
      # Tag containers with specific version number for registry.2nd.dev
      - buildah tag registry.2nd.dev/bark:linux-amd64 "registry.2nd.dev/bark:linux-amd64-$(cat VERSION)"
      - buildah tag registry.2nd.dev/bark:linux-arm64 "registry.2nd.dev/bark:linux-arm64-$(cat VERSION)"
      - buildah tag registry.2nd.dev/bark:linux-armv7 "registry.2nd.dev/bark:linux-armv7-$(cat VERSION)"
      # Push containers with specific version number to registry.2nd.dev
      - buildah push "registry.2nd.dev/bark:linux-amd64-$(cat VERSION)"
      - buildah push "registry.2nd.dev/bark:linux-arm64-$(cat VERSION)"
      - buildah push "registry.2nd.dev/bark:linux-armv7-$(cat VERSION)"
      # Create and push multi-arch docker manifest with tag latest to registry.2nd.dev
      - buildah manifest create     bark-multiarch
      - buildah manifest add        bark-multiarch docker://registry.2nd.dev/bark:linux-amd64
      - buildah manifest add        bark-multiarch docker://registry.2nd.dev/bark:linux-arm64
      - buildah manifest add        bark-multiarch docker://registry.2nd.dev/bark:linux-armv7
      - buildah manifest push --all bark-multiarch docker://registry.2nd.dev/bark:latest
      # Create and push multi-arch docker manifest with versioned tag to registry.2nd.dev
      - buildah manifest create     "bark-multiarch-$(cat VERSION)"
      - buildah manifest add        "bark-multiarch-$(cat VERSION)" "docker://registry.2nd.dev/bark:linux-amd64-$(cat VERSION)"
      - buildah manifest add        "bark-multiarch-$(cat VERSION)" "docker://registry.2nd.dev/bark:linux-arm64-$(cat VERSION)"
      - buildah manifest add        "bark-multiarch-$(cat VERSION)" "docker://registry.2nd.dev/bark:linux-armv7-$(cat VERSION)"
      - buildah manifest push --all "bark-multiarch-$(cat VERSION)" "docker://registry.2nd.dev/bark:$(cat VERSION)"

  - name: push-bark-to-docker
    when:
      - evaluate: 'CI_PIPELINE_EVENT == "tag" && CI_COMMIT_REF contains "refs/tags/bark-" && CI_REPO_URL == "https://codeberg.org/ark-bitcoin/bark"'
    failure: ignore
    depends_on: build-and-push-bark-to-registry
    # When this task fails make sure the sha256 is still available.
    #  You can verify using command: `skopeo inspect docker://quay.io/buildah/stable`
    #  or `skopeo inspect docker://quay.io/buildah/stable@sha256:5f67b6ece887c7ffbc063d174fd95f057a76b218adf1160c7a5c3d63997efd4b
    image: quay.io/buildah/stable@sha256:5f67b6ece887c7ffbc063d174fd95f057a76b218adf1160c7a5c3d63997efd4b
    environment:
      REGISTRY_LOGIN_TOKEN:
        from_secret: REGISTRY_LOGIN_TOKEN
      DOCKER_LOGIN_TOKEN:
        from_secret: DOCKER_LOGIN_TOKEN
    pull: true
    privileged: true
    commands:
      - cat VERSION
      - echo $DOCKER_LOGIN_TOKEN | buildah login -u secondark --password-stdin docker.io
      - echo $REGISTRY_LOGIN_TOKEN | buildah login -u registry --password-stdin registry.2nd.dev
      # Pull containers from registry.2nd.dev
      - buildah pull registry.2nd.dev/bark:linux-amd64
      - buildah pull registry.2nd.dev/bark:linux-arm64
      - buildah pull registry.2nd.dev/bark:linux-armv7
      # Tag containers for docker.io
      - buildah tag registry.2nd.dev/bark:linux-amd64 docker.io/secondark/bark:linux-amd64
      - buildah tag registry.2nd.dev/bark:linux-arm64 docker.io/secondark/bark:linux-arm64
      - buildah tag registry.2nd.dev/bark:linux-armv7 docker.io/secondark/bark:linux-armv7
      # Push containers to docker.io
      - buildah push docker.io/secondark/bark:linux-amd64
      - buildah push docker.io/secondark/bark:linux-arm64
      - buildah push docker.io/secondark/bark:linux-armv7
      # Tag containers with specific version number for docker.io
      - buildah tag registry.2nd.dev/bark:linux-amd64 "docker.io/secondark/bark:linux-amd64-$(cat VERSION)"
      - buildah tag registry.2nd.dev/bark:linux-arm64 "docker.io/secondark/bark:linux-arm64-$(cat VERSION)"
      - buildah tag registry.2nd.dev/bark:linux-armv7 "docker.io/secondark/bark:linux-armv7-$(cat VERSION)"
      # Push containers with specific version number to docker.io
      - buildah push "docker.io/secondark/bark:linux-amd64-$(cat VERSION)"
      - buildah push "docker.io/secondark/bark:linux-arm64-$(cat VERSION)"
      - buildah push "docker.io/secondark/bark:linux-armv7-$(cat VERSION)"
      # Create and push multi-arch docker manifest with tag latest to docker.io
      - buildah manifest create     bark-multiarch-docker
      - buildah manifest add        bark-multiarch-docker docker://docker.io/secondark/bark:linux-amd64
      - buildah manifest add        bark-multiarch-docker docker://docker.io/secondark/bark:linux-arm64
      - buildah manifest add        bark-multiarch-docker docker://docker.io/secondark/bark:linux-armv7
      - buildah manifest push --all bark-multiarch-docker docker://docker.io/secondark/bark:latest
      # Create and push multi-arch docker manifest with versioned tag to docker.io
      - buildah manifest create     "bark-multiarch-docker-$(cat VERSION)"
      - buildah manifest add        "bark-multiarch-docker-$(cat VERSION)" "docker://docker.io/secondark/bark:linux-amd64-$(cat VERSION)"
      - buildah manifest add        "bark-multiarch-docker-$(cat VERSION)" "docker://docker.io/secondark/bark:linux-arm64-$(cat VERSION)"
      - buildah manifest add        "bark-multiarch-docker-$(cat VERSION)" "docker://docker.io/secondark/bark:linux-armv7-$(cat VERSION)"
      - buildah manifest push --all "bark-multiarch-docker-$(cat VERSION)" "docker://docker.io/secondark/bark:$(cat VERSION)"

  - name: release-bark
    when:
      - event: tag
        ref: refs/tags/bark-*
    depends_on: build-bark
    image: registry.2nd.dev/build:23
    commands:
      - cat VERSION
      - cd ./target
      - cp x86_64-unknown-linux-gnu/release/bark       "bark-$(cat ../VERSION)-linux-x86_64"
      - cp aarch64-unknown-linux-gnu/release/bark      "bark-$(cat ../VERSION)-linux-arm64"
      - cp armv7-unknown-linux-gnueabihf/release/bark  "bark-$(cat ../VERSION)-linux-armv7"
      - cp x86_64-pc-windows-gnu/release/bark.exe      "bark-$(cat ../VERSION)-windows-x86_64.exe"
      - cp x86_64-apple-darwin/release/bark            "bark-$(cat ../VERSION)-apple-x86_64"
      - cp aarch64-apple-darwin/release/bark           "bark-$(cat ../VERSION)-apple-aarch64"
      - sha256sum "bark-$(cat ../VERSION)-linux-x86_64"       > SHA256SUMS
      - sha256sum "bark-$(cat ../VERSION)-linux-arm64"        >> SHA256SUMS
      - sha256sum "bark-$(cat ../VERSION)-linux-armv7"        >> SHA256SUMS
      - sha256sum "bark-$(cat ../VERSION)-windows-x86_64.exe" >> SHA256SUMS
      - sha256sum "bark-$(cat ../VERSION)-apple-x86_64"       >> SHA256SUMS
      - sha256sum "bark-$(cat ../VERSION)-apple-aarch64"      >> SHA256SUMS

  - name: publish-bark
    when:
      - event: tag
        ref: refs/tags/bark-*
    depends_on: release-bark
    image: woodpeckerci/plugin-release@sha256:f746ad9a4e652d7b793d6aafdab3df01e7640abf66b49333ebae26edd1678c64
    settings:
      files:
        - "./target/bark-*-linux-*"
        - "./target/bark-*-windows-x86_64.exe"
        - "./target/bark-*-apple-*"
        - "./target/SHA256SUMS"
      api_key:
        from_secret: RELEASE

depends_on:
  - helpers