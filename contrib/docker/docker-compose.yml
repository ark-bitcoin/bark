services:
  bitcoind:
    image:
      bitcoin/bitcoin:29
    command: [
      "bitcoind",
      "-regtest",
      "-printtoconsole",
      "-rpcbind=0.0.0.0",
      "-rpcallowip=0.0.0.0/0",
      "-fallbackfee=0.00001",
      "-server",
      "-txindex",
      "-blockfilterindex",
      "-coinstatsindex",
      # The rpcauth can be generated using python /share/rpcauth/rpcauth.py in
      # the bitcoin repository
      #
      # Note, that docker-compose requires you to escape the $
      # This is done, by copying the $-sign and make it appear twice
      "-rpcauth=second:23f161a911aa7a75e5ac78a8d41d5313$$cae8671bb16c4e6ac6fcf3e98195bf0a5de8ee9ec536471df3f5caf97bc16437"
      ]
    volumes:
      - bitcoind:/home/bitcoin/.bitcoin
    develop:
      watch:
        - action: sync+restart
          path: ./contrib/config/
          target: /home/bitcoin/bitcoin.conf
    ports:
      - "18443:18443"
    healthcheck:
      test: [
        "CMD-SHELL",
        "bitcoin-cli -regtest -rpcuser=second -rpcpassword=ark -rpcconnect=127.0.0.1 getblockchaininfo || exit 1"
      ]
      interval: 5s
      timeout: 3s
      retries: 10
  cln:
    build:
      context: ../../
      dockerfile: contrib/docker/cln.Dockerfile
    restart: on-failure
    entrypoint: ["/root/cln/start.sh"]
    volumes:
      - bitcoind:/root/.bitcoin
      - cln:/root/.lightning
    ports:
      - "9988:9988"
      - "9736:9736"
    depends_on:
      bitcoind:
        condition: service_healthy
  aspd:
    build:
      context: ../../
      dockerfile: contrib/docker/aspd.Dockerfile
    volumes:
      - aspd:/data/aspd
      - postgres:/var/lib/postgresql/data
      - cln:/data/cln
    ports:
      - "3535:3535"
    depends_on:
      bitcoind:
        condition: service_healthy
      cln:
        condition: service_started
  bark:
    build:
      context: ../../
      dockerfile: contrib/docker/bark.Dockerfile
    volumes:
      - bark:/root
    depends_on:
      aspd:
        condition: service_started

volumes:
  aspd:
  bark:
  cln:
  bitcoind:
  postgres:
