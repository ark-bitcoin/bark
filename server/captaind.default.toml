#
# This is a template config file for captaind.
# All required values have a default value provided in this file.
# All optional values are included here but are commented out.
#


# The directory all captaind data is stored
data_dir = "./bark-server"

# The bitcoin network this server runs on
network = "regtest"

# The lifetime of VTXOs in blocks
vtxo_lifetime = 4320

# Maximum value of VTXOs
#max_vtxo_amount = "1000000 sat"

# The time between execution of each exit clause of the VTXO, in blocks
vtxo_exit_delta = 12

# The maximum transaction depth of the arkoor part of VTXOs that server cosigns
max_arkoor_depth = 5

# Number of confirmation required for a board tx to be accepted as a VTXO
required_board_confirmations = 3

# Number of confirmations we require when using externally received UTXOs
round_tx_untrusted_input_confirmations = 2

# Whether to provide rich errors and stacktraces in RPC error returns
rpc_rich_errors = true

# The interval to update the tx index
txindex_check_interval = "30s"

# The minimum balance to maintain for the forfeit watcher, if running
forfeit_watcher_min_balance = "1 btc"

# The interval to rebroadcast transactions
transaction_rebroadcast_interval = "1m"

# A public service announcement to send on each client-server handshake request
#
# Clients are supposed to display this message to their users.
#handshake_psa = "Welcome to the most Awesome Ark Server!"

# Endpoint for OpenTelemetry collector
#otel_collector_endpoint = "http://127.0.0.1:4000"
# Probability of enabling OpenTelemetry tracing
#otel_tracing_sampler = "0.5"


##########
# ROUNDS #
##########

# The interval to start new rounds
round_interval = "10s"

# The time users have to submit payments when a round starts
round_submit_time = "2s"

# The time users have to provide VTXO tree and forfeit tx signatures
round_sign_time = "2s"

# The amount of round cosign nonces we require users to provide
#
# This effectively caps the maximum number of leaf VTXOs in a round.
nb_round_nonces = 64

# The feerate we set for round funding transactions
round_tx_feerate = "2500sat/kwu"


#############
# LIGHTNING #
#############

# Interval to retry connecting to disconnected CLN nodes
cln_reconnect_interval = "10s"

# Interval to double check on pending invoices
invoice_check_interval = "3s"

# Minimum interval to keep between two consecutive checks of an invoice
invoice_recheck_delay = "2s"

# FIXME
invoice_check_base_delay = "10s"

# FIXME
invoice_check_max_delay = "10m"

# FIXME
invoice_poll_interval = "30s"

# The number of blocks to keep between Lightning and Ark HTLCs expiries.
htlc_expiry_delta = 40

# The number of blocks after which an HTLC-send VTXO expires once granted.
# When granting an HTLC-send VTXO, the Server doesn't know the lightning
# route yet, so it needs this config to be sufficiently high to account
# for the worst routing scenario.
htlc_send_expiry_delta = 258

# Maximum CLTV delta server will allow clients to request an
# invoice generation with.
max_user_invoice_cltv_delta = 58

# Timeout on the HTLC subscription RPC call
htlc_subscription_timeout = "10m"

# This allows you to configure one or more lightning nodes for the server to use. Just add as
# many [[cln_array]] entries as you need!
#[[cln_array]]
#uri = "http://127.0.0.1:8000"
#priority = 10
#server_cert_path = "/etc/cln/server.cert"
#client_cert_path = "/etc/cln/client.cert"
#client_key_path = "/etc/cln/client.key"
#hodl_invoice.uri = "http://127.0.0.1:8001"
#hodl_invoice.server_cert_path = "/etc/cln/hold/server.cert"
#hodl_invoice.client_cert_path = "/etc/cln/hold/client.cert"
#hodl_invoice.client_key_path = "/etc/cln/chold/lient.key"


################
# VTXO SWEEPER #
################

[vtxo_sweeper]
enabled = true
# Fallback feerate to use for sweep txs
sweep_tx_fallback_feerate = "2500sat/kwu"
# Interval to check if sweeps can be made
round_sweep_interval = "1h"
# Minimum total sweep value to merit a sweep tx
sweep_threshold = 1000000


###################
# FORFEIT WATCHER #
###################

[forfeit_watcher]
enabled = true
# Fallback feerate to use for forfeit claims
claim_fallback_feerate = "6250sat/kwu"
# Interval to check of forfeited exits have been broadcast
wake_interval = "1m"


#############
# VTXO POOL #
#############

[vtxopool]
# The target set of VTXOs to maintain in the pool
# Format: "<amount>:<count>", f.e. "1000sat:50"
vtxo_targets = [ "1000sat:10", "10000sat:10" ]
# At what % of the target should new VTXOs be issued
#
# Once one of the target amounts falls below target, all amounts
# will be replenished.
vtxo_target_issue_threshold = 80
# The lifetime in blocks of the VTXOs in the pool
vtxo_lifetime = 432
# Time in blocks before the expiry to no longer use VTXOs
vtxo_pre_expiry = 144
# Maximum depth for pool VTXOs
vtxo_max_arkoor_depth = 3
# Fallback feerate for VTXO pool issuance txs
issue_tx_fallback_feerate = "250sat/kwu"
# The interval at which to check if an issuance should be made
issue_interval = "1m"


##################
# gRPC interface #
##################

[rpc]
# Listen address for the public gRPC API
public_address = "127.0.0.1:3535"
# Listen address for the private admin gRPC API
admin_address = "127.0.0.1:3536"
# Listen address for the integration manager gRPC API
integration_address = "127.0.0.1:3537"


#################
# POSTGRESQL DB #
#################

[postgres]
host = "localhost"
#user = "postgres"
#password = "super_secure"
port = 5432
name = "bark-server-db"
# Maximum parallel connections to maintain in our connection pool
max_connections = 10


############
# BITCOIND #
############

[bitcoind]
# Bitcoind JSON_RPC API endpoint
url = "http://127.0.0.1:18443"
# Path to the cookie file for RPC authentication
#cookie = "/home/bitcoin/.bitcoin/.cookie"
#rpc_user = "admin"
#rpc_pass = "super_secure"

